//@version=5
// indicator(title="ABC Pattern, ADX20, EMA200 (Indicator)", shorttitle="Indicator", overlay=true) // indicator
strategy(title="ABC Pattern, ADX20, EMA200 (Strategy)", shorttitle="Strategy", overlay=true, calc_on_every_tick=true, default_qty_type=strategy.cash, default_qty_value=2000, initial_capital=100, commission_type=strategy.commission.percent, commission_value=0.07)

// Inputs
int    length       = 5 // input.int(5, "High/Low length")
float  minimumAdx   = 20 // input.float(20, "Average Directional Movement Index (ADX)")
string tradetype    = "Long and Short" // input.string(defval="Long and Short", title="Trade Type", options=["Long and Short", "Long", "Short"])
float  tp           = 0.5 // input.float(0.5, "Take Profit Multiplicator")

// Declarations
float  h            = ta.highest(high, length * 2 + 1)
float  l            = ta.lowest(low, length * 2 + 1)
bool   recentTouch  = false

// Variables
var bool   dirUp    = false
var float  lastLow  = high * 100
var float  lastHigh = 0.0
var int    timeLow  = bar_index
var int    timeHigh = bar_index
bool       isMin    = l == low[length]
bool       isMax    = h == high[length]

// Direction
if dirUp
    if isMin and low[length] < lastLow
        lastLow := low[length]
        timeLow := bar_index

    if isMax and high[length] > lastLow
        lastHigh := high[length]
        timeHigh := bar_index
        dirUp := false

if not dirUp
    if isMax and high[length] > lastHigh
        lastHigh := high[length]
        timeHigh := bar_index
    if isMin and low[length] < lastHigh
        lastLow := low[length]
        timeLow := bar_index
        dirUp := true
        if (isMax and high[length] > lastLow)
            lastHigh := high[length]
            timeHigh := bar_index
            dirUp := false

// Checkers        
for int i = 1 to 10
    if (low[i] <= lastLow[i] and low[i + 1] > lastLow[i + 1]) or (high[i] >= lastHigh[i] and high[i + 1] < lastHigh[i + 1])
        recentTouch := true
        break

// Trend Directions
ema200 = ta.ema(close, 200)
// Confirmations
[directionalIndexPlus, directionalIndexMinux, adx] = ta.dmi(14, 14)

// Conditions Definitions
longCondition  = high >= lastHigh and high[1] < lastHigh[1] and not recentTouch and close[1] > ema200 and adx > minimumAdx
shortCondition = low <= lastLow   and low[1] > lastLow[1]   and not recentTouch and close[1] < ema200 and adx > minimumAdx

// Short Entry
if shortCondition
    strategy = -1
    entry    = lastLow - syminfo.mintick
    stopLoss = lastHigh + syminfo.mintick
    target   = (lastLow - (lastHigh - lastLow) * tp) - syminfo.mintick
    
    // Trade
    strategy.entry(id="Short Open @ " + str.tostring(entry), direction=strategy.short)
    strategy.exit(id="Short Close @ ", from_entry="Short Open @ " + str.tostring(entry), limit=target, stop=stopLoss)

// Long Entry
if longCondition and not shortCondition
    strategy = 1
    entry    = lastHigh + syminfo.mintick
    stopLoss = lastLow - syminfo.mintick
    target   = (lastHigh + (lastHigh - lastLow) * tp) + syminfo.mintick
    
    // Trade
    strategy.entry(id="Long Open @ " + str.tostring(entry), direction=strategy.long)
    strategy.exit(id="Long Close @ ", from_entry="Long Open @ " + str.tostring(entry), limit=target, stop=stopLoss)